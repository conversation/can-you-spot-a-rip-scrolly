import { useRef, useState } from 'react'
import { Stage, Layer, Line } from 'react-konva'
import useSize from '@react-hook/size'
import { KonvaEventObject } from 'konva/lib/Node'
import { useAtomValue } from 'jotai'
import { quizReveal, standardSize } from '../../context/Atoms'

export default function QuizTwo() {
  const parentRef = useRef(null)
  const [width, height] = useSize(parentRef)
  const [isDrawing, setIsDrawing] = useState(false)
  const [lines, setLines] = useState<{ points: number[]; stroke: string }[]>([])
  const revealAnswer = useAtomValue(quizReveal)
  const answerLines: { points: number[]; stroke: string }[] = [
    {
      points: [
        808, 508.5, 807, 508.5, 807, 508.5, 807, 508.5, 807, 508.5, 806, 508.5, 806, 508.5, 805, 508.5, 804, 508.5, 803,
        508.5, 802, 508.5, 801, 508.5, 800, 508.5, 798, 508.5, 797, 508.5, 796, 508.5, 794, 508.5, 794, 508.5, 789,
        507.5, 788, 507.5, 787, 507.5, 785, 507.5, 784, 507.5, 783, 507.5, 783, 507.5, 782, 507.5, 781, 507.5, 780,
        507.5, 779, 507.5, 778, 507.5, 778, 507.5, 777, 507.5, 776, 507.5, 776, 507.5, 775, 507.5, 774, 507.5, 774,
        507.5, 774, 507.5, 773, 507.5, 773, 507.5, 773, 507.5, 772, 507.5, 772, 506.5, 771, 506.5, 771, 506.5, 770,
        506.5, 770, 506.5, 769, 506.5, 769, 506.5, 768, 506.5, 768, 506.5, 767, 506.5, 767, 506.5, 766, 506.5, 766,
        506.5, 765, 506.5, 765, 506.5, 764, 506.5, 764, 506.5, 763, 506.5, 763, 506.5, 762, 506.5, 762, 506.5, 761,
        506.5, 760, 506.5, 759, 506.5, 759, 506.5, 758, 506.5, 757, 506.5, 757, 506.5, 756, 506.5, 755, 506.5, 753,
        506.5, 753, 506.5, 752, 506.5, 751, 506.5, 750, 506.5, 749, 506.5, 748, 506.5, 748, 506.5, 747, 506.5, 746,
        506.5, 745, 506.5, 744, 506.5, 744, 506.5, 743, 506.5, 742, 506.5, 741, 506.5, 741, 506.5, 740, 506.5, 740,
        506.5, 739, 506.5, 739, 506.5, 738, 506.5, 737, 506.5, 737, 506.5, 736, 506.5, 735, 506.5, 734, 506.5, 734,
        506.5, 733, 506.5, 732, 506.5, 732, 506.5, 731, 506.5, 730, 506.5, 730, 506.5, 729, 506.5, 728, 506.5, 727,
        506.5, 726, 506.5, 726, 506.5, 725, 506.5, 724, 506.5, 723, 506.5, 722, 506.5, 721, 506.5, 721, 506.5, 720,
        506.5, 719, 506.5, 718, 506.5, 717, 506.5, 717, 506.5, 716, 506.5, 715, 506.5, 714, 506.5, 712, 506.5, 711,
        506.5, 711, 505.5, 710, 505.5, 709, 505.5, 708, 505.5, 707, 505.5, 707, 505.5, 706, 505.5, 705, 505.5, 704,
        505.5, 703, 505.5, 702, 505.5, 701, 505.5, 700, 505.5, 699, 505.5, 698, 505.5, 698, 505.5, 697, 505.5, 696,
        504.5, 695, 504.5, 694, 504.5, 693, 504.5, 693, 504.5, 692, 504.5, 691, 504.5, 691, 504.5, 690, 504.5, 689,
        504.5, 689, 503.5, 688, 503.5, 687, 503.5, 686, 503.5, 686, 503.5, 685, 503.5, 684, 503.5, 683, 502.5, 682,
        502.5, 682, 502.5, 681, 502.5, 680, 502.5, 680, 502.5, 680, 502.5, 679, 502.5, 678, 501.5, 678, 501.5, 677,
        501.5, 677, 501.5, 676, 501.5, 675, 501.5, 675, 501.5, 674, 500.5, 673, 500.5, 673, 500.5, 672, 500.5, 671,
        500.5, 671, 500.5, 671, 500.5, 670, 499.5, 669, 499.5, 669, 499.5, 668, 499.5, 668, 499.5, 667, 499.5, 667,
        499.5, 666, 498.5, 666, 498.5, 665, 498.5, 665, 498.5, 665, 498.5, 664, 498.5, 663, 498.5, 663, 497.5, 663,
        497.5, 662, 497.5, 662, 497.5, 661, 497.5, 661, 497.5, 660, 496.5, 660, 496.5, 659, 496.5, 658, 496.5, 658,
        496.5, 657, 495.5, 657, 495.5, 656, 495.5, 656, 495.5, 656, 495.5, 655, 495.5, 655, 495.5, 654, 494.5, 654,
        494.5, 653, 494.5, 653, 494.5, 652, 493.5, 651, 493.5, 650, 493.5, 649, 492.5, 649, 492.5, 648, 492.5, 647,
        491.5, 647, 491.5, 646, 491.5, 645, 491.5, 645, 490.5, 644, 490.5, 644, 490.5, 644, 490.5, 642, 489.5, 641,
        489.5, 641, 488.5, 640, 488.5, 640, 488.5, 639, 488.5, 639, 488.5, 638, 487.5, 638, 487.5, 637, 487.5, 637,
        486.5, 636, 486.5, 635, 486.5, 635, 485.5, 634, 485.5, 634, 485.5, 633, 484.5, 633, 484.5, 632, 484.5, 632,
        484.5, 632, 484.5, 631, 483.5, 631, 483.5, 631, 483.5, 630, 483.5, 630, 482.5, 629, 482.5, 629, 482.5, 629,
        482.5, 629, 482.5, 628, 481.5, 628, 481.5, 628, 481.5, 628, 481.5, 628, 481.5, 627, 481.5, 627, 481.5, 627,
        481.5, 627, 480.5, 627, 480.5, 627, 480.5, 627, 480.5, 627, 480.5, 626, 480.5, 626, 479.5, 626, 479.5, 626,
        479.5, 626, 479.5, 626, 479.5, 625, 478.5, 625, 478.5, 625, 478.5, 625, 478.5, 625, 477.5, 625, 477.5, 625,
        477.5, 624, 477.5, 624, 476.5, 624, 476.5, 624, 476.5, 624, 476.5, 624, 475.5, 623, 475.5, 623, 475.5, 623,
        474.5, 623, 474.5, 623, 474.5, 623, 474.5, 623, 474.5, 623, 474.5, 623, 474.5, 623, 474.5, 623, 474.5, 623,
        474.5, 623, 474.5, 623, 473.5, 623, 473.5, 623, 473.5, 623, 473.5, 623, 473.5, 623, 473.5, 623, 473.5, 623,
        473.5, 623, 473.5, 623, 473.5, 623, 473.5, 623, 473.5, 623, 473.5, 623, 473.5, 622, 472.5, 622, 472.5, 622,
        472.5, 622, 472.5, 622, 472.5, 622, 472.5, 622, 472.5, 622, 472.5, 622, 472.5, 622, 472.5, 622, 472.5, 622,
        472.5, 622, 472.5, 622, 472.5, 622, 472.5, 622, 472.5, 622, 472.5, 622, 472.5, 622, 472.5, 622, 472.5, 621,
        472.5, 621, 472.5, 621, 473.5, 621, 473.5, 621, 473.5, 620, 473.5, 620, 474.5, 620, 474.5, 620, 474.5, 620,
        474.5, 620, 474.5, 620, 474.5, 619, 475.5, 619, 475.5, 619, 475.5, 619, 475.5, 619, 476.5, 619, 476.5, 619,
        476.5, 618, 476.5, 618, 477.5, 618, 477.5, 618, 477.5, 618, 478.5, 618, 478.5, 618, 478.5, 618, 478.5, 617,
        479.5, 617, 479.5, 617, 479.5, 617, 479.5, 617, 480.5, 617, 480.5, 617, 480.5, 617, 480.5, 617, 480.5, 617,
        480.5, 617, 480.5, 617, 481.5, 617, 481.5, 616, 481.5, 616, 482.5, 616, 482.5, 616, 482.5, 616, 482.5, 616,
        482.5, 616, 482.5, 616, 483.5, 616, 483.5, 616, 483.5, 616, 483.5, 616, 483.5, 616, 483.5, 616, 484.5, 616,
        484.5, 616, 484.5, 615, 484.5, 615, 485.5, 615, 485.5, 615, 485.5, 615, 486.5, 615, 486.5, 615, 486.5, 615,
        486.5, 615, 487.5, 615, 487.5, 615, 487.5, 615, 487.5, 614, 488.5, 614, 488.5, 614, 488.5, 614, 488.5, 614,
        488.5, 614, 489.5, 614, 489.5, 614, 489.5, 614, 489.5, 615, 488.5, 616, 488.5, 616, 488.5, 617, 488.5
      ],
      stroke: '#feaa01'
    },
    {
      points: [
        620, 474.5, 620, 474.5, 620, 474.5, 620, 474.5, 620, 474.5, 620, 474.5, 621, 474.5, 621, 474.5, 621, 474.5, 622,
        474.5, 622, 474.5, 623, 474.5, 624, 474.5, 625, 474.5, 626, 474.5, 627, 474.5, 628, 474.5, 629, 474.5, 631,
        474.5, 633, 474.5, 634, 474.5, 636, 474.5, 637, 474.5, 638, 474.5, 639, 474.5, 640, 474.5, 641, 474.5, 642,
        474.5, 643, 475.5, 644, 475.5, 645, 475.5, 645, 475.5, 646, 475.5, 646, 475.5, 647, 475.5, 648, 475.5, 648,
        475.5, 649, 475.5, 649, 475.5, 649, 475.5, 648, 475.5, 648, 475.5, 648, 475.5, 648, 475.5, 649, 475.5, 649,
        475.5, 650, 475.5, 652, 476.5
      ],
      stroke: '#feaa01'
    },
    {
      points: [
        705, 506.5, 705, 506.5, 705, 506.5, 706, 506.5, 706, 506.5, 706, 506.5, 706, 506.5, 707, 505.5, 707, 505.5, 708,
        505.5, 708, 505.5, 709, 505.5, 709, 505.5, 710, 504.5, 710, 504.5, 711, 504.5, 712, 504.5, 713, 503.5, 714,
        503.5, 715, 503.5, 716, 503.5, 717, 502.5, 718, 502.5, 719, 502.5, 720, 502.5, 721, 501.5, 721, 501.5, 722,
        501.5, 723, 501.5, 723, 501.5, 724, 500.5, 724, 500.5, 725, 500.5, 725, 500.5, 725, 500.5, 725, 500.5, 726,
        500.5, 726, 500.5, 726, 500.5, 727, 499.5, 727, 499.5, 727, 499.5, 727, 499.5, 728, 499.5, 728, 499.5, 728,
        499.5, 729, 499.5, 730, 498.5, 730, 498.5, 731, 498.5, 732, 498.5, 732, 498.5, 732, 498.5, 732, 498.5, 732,
        498.5, 733, 498.5, 733, 498.5, 733, 498.5, 733, 498.5, 733, 498.5, 733, 498.5, 733, 498.5, 733, 498.5, 732,
        498.5, 731, 499.5, 730, 499.5, 730, 499.5
      ],
      stroke: '#feaa01'
    },
    {
      points: [
        707, 508.5, 707, 508.5, 707, 508.5, 707, 508.5, 707, 508.5, 707, 508.5, 707, 508.5, 707, 508.5, 708, 508.5, 708,
        508.5, 709, 509.5, 711, 510.5, 712, 510.5, 713, 511.5, 714, 511.5, 715, 512.5, 716, 512.5, 716, 513.5, 716,
        513.5, 717, 513.5, 717, 513.5, 718, 513.5, 718, 514.5, 718, 514.5, 719, 514.5, 719, 514.5, 719, 514.5, 719,
        515.5, 720, 515.5, 720, 515.5, 720, 515.5, 720, 515.5, 720, 515.5, 721, 515.5, 721, 516.5, 722, 516.5, 723,
        517.5, 724, 517.5, 724, 517.5, 724, 518.5, 725, 518.5, 725, 518.5, 725, 518.5, 725, 518.5, 725, 518.5, 725,
        518.5, 726, 518.5, 726, 519.5, 726, 519.5, 726, 519.5, 727, 519.5, 727, 519.5, 727, 519.5, 727, 519.5, 727,
        519.5, 727, 519.5, 727, 519.5, 727, 520.5, 728, 520.5, 728, 520.5, 728, 520.5, 728, 520.5, 728, 520.5, 728,
        520.5, 728, 520.5, 728, 520.5, 728, 520.5, 728, 520.5, 728, 520.5, 728, 520.5, 728, 520.5, 729, 520.5, 729,
        520.5, 729, 520.5, 729, 520.5, 729, 521.5, 729, 521.5, 730, 521.5, 731, 521.5, 731, 521.5
      ],
      stroke: '#feaa01'
    },
    {
      points: [
        808, 508.5, 808, 508.5, 808, 508.5, 808, 508.5, 808, 508.5, 808, 508.5, 808, 508.5, 808, 508.5, 809, 508.5, 810,
        508.5, 810, 508.5, 811, 507.5, 811, 507.5, 812, 506.5, 813, 506.5, 815, 505.5, 817, 504.5, 818, 504.5, 819,
        503.5, 820, 503.5, 821, 503.5, 822, 502.5, 822, 502.5, 822, 502.5, 823, 502.5, 823, 502.5, 823, 502.5, 823,
        502.5, 823, 502.5, 823, 502.5, 823, 502.5, 823, 502.5, 823, 502.5, 823, 502.5, 824, 502.5, 824, 501.5, 824,
        501.5, 824, 501.5, 824, 501.5, 824, 501.5, 824, 501.5, 824, 501.5, 824, 501.5, 825, 501.5, 825, 501.5, 825,
        501.5, 825, 501.5, 825, 501.5, 825, 501.5, 826, 501.5, 826, 501.5, 826, 501.5, 826, 501.5, 826, 501.5, 826,
        501.5, 826, 501.5, 826, 501.5, 826, 501.5, 826, 501.5
      ],
      stroke: '#feaa01'
    },
    {
      points: [
        806, 513.5, 806, 513.5, 806, 513.5, 806, 513.5, 806, 513.5, 806, 513.5, 806, 513.5, 806, 513.5, 806, 513.5, 807,
        514.5, 807, 514.5, 807, 514.5, 808, 514.5, 808, 515.5, 809, 515.5, 809, 516.5, 810, 516.5, 811, 517.5, 812,
        517.5, 813, 518.5, 813, 518.5, 814, 519.5, 815, 519.5, 815, 520.5, 816, 520.5, 816, 520.5, 817, 521.5, 817,
        521.5, 818, 522.5, 818, 522.5, 819, 523.5, 820, 523.5, 821, 524.5, 822, 524.5, 822, 525.5, 823, 525.5, 823,
        525.5, 823, 525.5, 823, 525.5, 823, 525.5, 823, 525.5, 823, 525.5, 823, 525.5, 823, 525.5, 824, 526.5, 824,
        526.5, 824, 526.5
      ],
      stroke: '#feaa01'
    },
    {
      points: [
        801, 511.5, 801, 511.5, 801, 511.5, 802, 512.5, 802, 512.5, 802, 512.5, 803, 512.5, 804, 512.5, 804, 512.5, 804,
        512.5, 805, 512.5, 805, 513.5, 805, 513.5, 806, 513.5, 806, 513.5, 807, 513.5, 807, 513.5, 807, 513.5, 808,
        513.5, 808, 514.5, 808, 514.5, 808, 514.5, 809, 514.5, 809, 514.5, 810, 515.5, 810, 515.5, 810, 515.5, 810,
        515.5, 810, 515.5, 810, 515.5, 810, 515.5, 810, 515.5, 810, 515.5, 811, 515.5, 811, 515.5, 811, 515.5, 811,
        515.5, 812, 515.5, 812, 515.5, 813, 516.5
      ],
      stroke: '#feaa01'
    },
    {
      points: [
        803, 510.5, 803, 510.5, 803, 510.5, 803, 510.5, 803, 510.5, 803, 510.5, 804, 510.5, 804, 510.5, 804, 510.5, 805,
        510.5, 806, 510.5, 806, 510.5, 807, 510.5, 807, 510.5, 808, 510.5, 809, 510.5, 809, 510.5, 810, 510.5, 810,
        510.5, 811, 510.5, 812, 510.5, 813, 510.5, 813, 510.5, 814, 510.5, 815, 510.5, 815, 510.5, 817, 510.5, 818,
        510.5, 819, 510.5, 820, 510.5, 821, 510.5, 822, 510.5, 823, 510.5, 824, 510.5, 825, 510.5, 826, 510.5, 827,
        510.5, 828, 510.5, 829, 510.5, 830, 510.5, 831, 510.5, 833, 510.5, 834, 510.5, 835, 510.5, 836, 510.5, 837,
        510.5, 838, 510.5, 839, 510.5, 839, 510.5, 839, 510.5, 840, 510.5, 840, 510.5, 841, 510.5, 842, 510.5, 843,
        510.5, 843, 510.5, 844, 510.5, 845, 510.5, 846, 510.5, 848, 510.5, 849, 510.5, 849, 510.5, 850, 510.5, 851,
        510.5, 852, 510.5, 853, 510.5, 853, 510.5, 854, 510.5, 856, 510.5, 857, 509.5, 859, 510.5, 862, 510.5, 864,
        510.5, 866, 510.5, 867, 510.5, 869, 510.5, 870, 509.5, 872, 509.5, 873, 509.5, 874, 509.5, 875, 509.5, 876,
        509.5, 877, 509.5, 878, 509.5, 879, 509.5, 881, 509.5, 883, 509.5, 885, 509.5, 887, 508.5, 888, 508.5, 889,
        508.5, 890, 508.5, 891, 508.5, 891, 508.5, 891, 508.5, 892, 508.5, 892, 508.5, 893, 508.5, 894, 508.5, 895,
        508.5, 896, 508.5, 897, 508.5, 899, 508.5, 900, 508.5, 901, 508.5, 902, 508.5, 903, 508.5, 903, 507.5, 904,
        507.5, 905, 507.5, 905, 507.5, 906, 507.5, 906, 507.5, 907, 507.5, 908, 507.5, 909, 507.5, 910, 507.5, 912,
        507.5, 913, 507.5, 914, 507.5, 916, 507.5, 917, 507.5, 917, 507.5, 918, 507.5, 919, 507.5, 920, 506.5, 921,
        506.5, 921, 506.5, 922, 506.5, 924, 506.5, 925, 506.5, 926, 506.5, 928, 506.5, 929, 506.5, 931, 506.5, 933,
        506.5, 935, 506.5, 937, 505.5, 938, 505.5, 940, 505.5, 941, 505.5, 943, 504.5, 945, 504.5, 947, 504.5, 948,
        503.5, 950, 503.5, 952, 503.5, 953, 503.5, 954, 503.5, 955, 503.5, 956, 503.5, 957, 502.5, 959, 502.5, 961,
        502.5, 963, 502.5, 964, 502.5, 966, 501.5, 968, 501.5, 969, 501.5, 970, 501.5, 970, 501.5, 971, 501.5, 972,
        501.5, 973, 501.5, 975, 500.5, 976, 500.5, 978, 500.5, 980, 500.5, 983, 500.5, 985, 500.5, 987, 500.5, 988,
        500.5, 990, 500.5, 990, 500.5, 991, 500.5, 991, 500.5, 991, 500.5, 992, 500.5, 992, 500.5, 993, 499.5, 994,
        499.5, 994, 499.5, 996, 499.5, 997, 499.5, 998, 499.5, 999, 499.5, 1000, 499.5, 1001, 499.5, 1002, 499.5, 1003,
        499.5, 1003, 499.5, 1004, 499.5, 1005, 499.5, 1005, 499.5, 1006, 499.5, 1007, 499.5, 1009, 499.5, 1010, 498.5,
        1011, 498.5, 1012, 498.5, 1014, 498.5, 1016, 498.5, 1017, 498.5, 1019, 498.5, 1020, 498.5, 1022, 498.5, 1024,
        498.5, 1025, 498.5, 1027, 498.5, 1028, 498.5, 1030, 498.5, 1032, 497.5, 1035, 497.5, 1037, 497.5, 1039, 497.5,
        1040, 497.5, 1042, 497.5, 1044, 497.5, 1046, 497.5, 1047, 497.5, 1048, 497.5, 1049, 497.5, 1050, 497.5, 1052,
        497.5, 1054, 497.5, 1056, 497.5, 1057, 497.5, 1059, 497.5, 1061, 497.5, 1062, 497.5, 1063, 497.5, 1063, 497.5,
        1065, 497.5, 1066, 497.5, 1067, 497.5, 1069, 497.5, 1070, 497.5, 1071, 497.5, 1072, 497.5, 1074, 497.5, 1074,
        497.5, 1075, 497.5, 1076, 497.5, 1077, 497.5, 1078, 497.5, 1079, 497.5, 1080, 497.5, 1081, 497.5, 1082, 497.5,
        1084, 497.5, 1085, 497.5, 1086, 497.5, 1087, 497.5, 1088, 497.5, 1089, 497.5, 1090, 497.5, 1092, 497.5, 1092,
        497.5, 1093, 497.5, 1094, 497.5, 1095, 497.5, 1096, 497.5, 1097, 497.5, 1098, 497.5, 1099, 497.5, 1101, 497.5,
        1103, 498.5, 1106, 498.5, 1108, 498.5, 1110, 498.5, 1112, 498.5, 1113, 499.5, 1115, 499.5, 1116, 499.5, 1117,
        499.5, 1119, 499.5, 1120, 499.5, 1123, 499.5, 1125, 499.5, 1126, 499.5, 1127, 500.5, 1128, 500.5, 1129, 500.5,
        1130, 500.5, 1130, 500.5, 1130, 500.5, 1131, 500.5, 1131, 500.5, 1132, 500.5, 1132, 500.5, 1133, 500.5, 1133,
        500.5, 1134, 500.5, 1135, 500.5, 1135, 500.5, 1135, 500.5, 1136, 500.5, 1136, 500.5, 1136, 500.5, 1136, 500.5,
        1137, 500.5, 1137, 500.5, 1137, 500.5, 1137, 500.5, 1138, 500.5, 1139, 500.5, 1139, 500.5, 1141, 500.5, 1142,
        501.5, 1143, 501.5, 1144, 501.5, 1145, 501.5, 1145, 501.5, 1146, 501.5, 1148, 501.5, 1150, 501.5, 1151, 502.5,
        1153, 502.5, 1154, 502.5, 1155, 502.5, 1156, 502.5, 1157, 502.5, 1157, 502.5, 1158, 502.5, 1158, 502.5, 1158,
        502.5, 1158, 503.5, 1159, 503.5, 1159, 503.5, 1160, 503.5, 1160, 503.5, 1161, 503.5, 1161, 503.5, 1162, 504.5,
        1162, 504.5, 1163, 504.5, 1164, 504.5, 1165, 504.5, 1167, 505.5, 1168, 505.5, 1169, 505.5, 1170, 506.5, 1171,
        506.5, 1171, 506.5, 1171, 506.5, 1171, 506.5, 1171, 506.5, 1171, 506.5, 1171, 506.5, 1171, 506.5, 1172, 506.5,
        1172, 506.5, 1173, 507.5, 1174, 507.5, 1175, 507.5, 1175, 507.5, 1175, 507.5, 1175, 507.5, 1175, 507.5, 1175,
        507.5, 1176, 507.5, 1176, 507.5, 1176, 507.5, 1176, 507.5, 1176, 508.5, 1176, 508.5, 1176, 508.5, 1176, 508.5,
        1176, 508.5, 1176, 508.5, 1176, 508.5
      ],
      stroke: '#feaa01'
    },
    {
      points: [
        982, 500.5, 982, 500.5, 982, 500.5, 982, 500.5, 982, 500.5, 982, 499.5, 983, 499.5, 983, 499.5, 984, 498.5, 985,
        497.5, 986, 497.5, 987, 496.5, 988, 495.5, 989, 494.5, 990, 494.5, 991, 493.5, 992, 493.5, 993, 492.5, 993,
        491.5, 994, 491.5, 995, 490.5, 996, 489.5, 996, 489.5, 997, 489.5, 997, 488.5, 998, 488.5, 998, 488.5, 998,
        488.5, 998, 488.5, 998, 487.5, 998, 487.5, 998, 487.5, 998, 487.5, 998, 488.5, 998, 488.5
      ],
      stroke: '#feaa01'
    },
    {
      points: [
        982, 501.5, 982, 501.5, 982, 501.5, 983, 501.5, 983, 501.5, 983, 501.5, 983, 501.5, 984, 501.5, 984, 501.5, 985,
        502.5, 985, 502.5, 986, 502.5, 987, 502.5, 988, 503.5, 989, 503.5, 990, 504.5, 992, 504.5, 993, 505.5, 994,
        505.5, 995, 506.5, 996, 506.5, 996, 507.5, 997, 507.5, 998, 507.5, 998, 507.5, 998, 508.5, 999, 508.5, 1000,
        509.5, 1001, 509.5, 1001, 509.5, 1001, 509.5, 1002, 510.5, 1002, 510.5, 1002, 510.5, 1002, 510.5, 1002, 510.5,
        1002, 510.5, 1002, 510.5, 1002, 510.5, 1003, 510.5, 1003, 510.5, 1003, 511.5, 1004, 511.5, 1004, 511.5, 1004,
        511.5, 1004, 511.5, 1004, 511.5, 1004, 511.5, 1004, 511.5, 1004, 511.5, 1005, 512.5, 1005, 512.5, 1005, 512.5,
        1006, 512.5, 1006, 512.5, 1006, 512.5, 1006, 512.5, 1006, 512.5, 1006, 512.5, 1006, 512.5, 1006, 513.5, 1006,
        513.5, 1007, 513.5, 1007, 513.5, 1007, 513.5, 1007, 513.5, 1007, 513.5, 1007, 513.5, 1007, 514.5, 1007, 514.5
      ],
      stroke: '#d8352a'
    }
  ]

  const originalSize = useAtomValue(standardSize)

  // Calculate the scaling factors
  const scaleX = width / originalSize.width
  const scaleY = height / originalSize.height

  const handlePointerDown = (e: KonvaEventObject<MouseEvent | TouchEvent>) => {
    setIsDrawing(true)
    const stage = e.target.getStage()

    if (!stage) return

    const point = stage.getPointerPosition()

    // Adjust point to original coordinates
    const adjustedPoint = {
      x: point!.x / scaleX,
      y: point!.y / scaleY
    }

    // Start a new line with stroke 'red'
    setLines([...lines, { points: [adjustedPoint.x, adjustedPoint.y], stroke: '#d8352a' }])
  }

  const handlePointerMove = (e: KonvaEventObject<MouseEvent | TouchEvent>) => {
    e.evt.preventDefault()
    if (!isDrawing) return

    const stage = e.target.getStage()

    if (!stage) return

    const point = stage.getPointerPosition()

    // Adjust point to original coordinates
    const adjustedPoint = {
      x: point!.x / scaleX,
      y: point!.y / scaleY
    }

    // Update the last line's points
    setLines((prevLines) => {
      const updatedLines = prevLines.slice()
      const lastLine = { ...updatedLines[updatedLines.length - 1] }
      lastLine.points = lastLine.points.concat([adjustedPoint.x, adjustedPoint.y])
      updatedLines[updatedLines.length - 1] = lastLine
      return updatedLines
    })
  }

  const handlePointerUp = () => {
    if (!isDrawing) return
    setIsDrawing(false)

    setLines((prevLines) => {
      const updatedLines = prevLines.slice()
      const lastLine = { ...updatedLines[updatedLines.length - 1] }
      if (lastLine) {
        lastLine.stroke = '#feaa01'
        updatedLines[updatedLines.length - 1] = lastLine
      }
      return updatedLines
    })
  }

  const handleClearLines = () => {
    setLines([])
  }

  return (
    <div className='font-base'>
      <div
        ref={parentRef}
        className='canvas-container relative mx-auto aspect-[4/3] w-canvas-width max-w-full overflow-hidden rounded-md bg-[url(https://images.theconversation.com/files/634720/original/file-20241127-15-fsgcdl.jpg?ixlib=rb-4.1.0&q=45&auto=format&w=800)] bg-cover bg-no-repeat shadow-lg'
      >
        <Stage
          width={width}
          height={height}
          scaleX={scaleX}
          scaleY={scaleY}
          onMouseDown={handlePointerDown}
          onTouchStart={handlePointerDown}
          onMouseMove={handlePointerMove}
          onTouchMove={handlePointerMove}
          onMouseUp={handlePointerUp}
          onTouchEnd={handlePointerUp}
          onMouseLeave={handlePointerUp}
          onTouchCancel={handlePointerUp}
        >
          <Layer>
            {lines.map((line, i) => (
              <Line
                key={i}
                points={line.points}
                stroke={line.stroke}
                strokeWidth={4}
                tension={0.4}
                lineCap='round'
                lineJoin='round'
              />
            ))}
            {revealAnswer.quiz2 &&
              answerLines.map((line, i) => (
                <Line
                  key={i}
                  points={line.points}
                  stroke={'#40bf95'}
                  strokeWidth={4}
                  tension={0.4}
                  lineCap='round'
                  lineJoin='round'
                />
              ))}
          </Layer>
        </Stage>

        <div className='absolute left-2 top-2 text-sm md:text-lg'>
          <button
            onClick={handleClearLines}
            className='cursor-pointer bg-neutral-500/20 p-2 text-white backdrop-blur-sm transition-all duration-150 ease-in-out hover:text-neutral-100 hover:shadow-lg active:scale-95'
          >
            Clear
          </button>
        </div>
      </div>
    </div>
  )
}
